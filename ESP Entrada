#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <DHT.h>
#include <Wire.h>
#include <Adafruit_MLX90614.h>
// Update these with values suitable for your network.

#define DHTPIN D5
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);


const byte intPuerta = D4;
volatile boolean isrAlarmaCentinela = false; // Detectar interrupción

const int Trigger = D6;
const int Echo = D7;
const int lluvia = D3;
const int AlarmaCocina = D8;


Adafruit_MLX90614 mlx = Adafruit_MLX90614();

const char* ssid = "FaB";
const char* password = "yoki_#777";

//const char* ssid = "CLARO1_2B0DF0";
//const char* password = "842O6QxFGw";

int ledPin = D0; // declaramos el led en el pin 12 del arduino
int sensorPin = D2; // declaramos el sensor PIR en el pin 11
int val = 0; //variable para asignar la lectura del sensor PIR
int ValPuerta = 0;
int estadoAlarma = 0;


const char* mqtt_server = "192.168.1.200";

WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;

char msg0[7];
char msg1[4];
char msg2[4];
int value = 0;
void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();

  // Switch on the LED if an 1 was received as first character
  if ((char)payload[0] == '1') {
    digitalWrite(BUILTIN_LED, LOW);   // Turn the LED on (Note that LOW is the voltage level
    // but actually the LED is on; this is because
    // it is active low on the ESP-01)
  } else {
    digitalWrite(BUILTIN_LED, HIGH);  // Turn the LED off by making the voltage HIGH
  }

}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("outTopic", "hello world");
      // ... and resubscribe
      client.subscribe("inTopic");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {

  Serial.begin(9600);
//  termometroIR.begin();

  pinMode(ledPin, OUTPUT); //El pin 12 del arduino lo asignamos como salida para el led
  pinMode(sensorPin, INPUT);//El pin 11 lo asignamos como entrada para la señal del sensor
  pinMode(Trigger, OUTPUT);
  pinMode(Echo, INPUT);
  pinMode(BUILTIN_LED, OUTPUT);     // Initialize the BUILTIN_LED pin as an output
  pinMode(intPuerta, INPUT); // Interrupción interruptor magnético
  pinMode(AlarmaCocina, INPUT);
  pinMode(lluvia, INPUT);
  //  attachInterrupt(intPuerta, isrAlarma, FALLING); //Interrupción interruptor magnético

  digitalWrite(Trigger, LOW);

  if (!mlx.begin()) {
    Serial.println("Error connecting to MLX sensor. Check wiring.");
    while (1);
  };

  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
  dht.begin();
}

void loop() {

/*
  //infrarrojo
  float temperaturaObjeto = termometroIR.readObjectTempC();
  //dtostrf (temperaturaObjeto, 4, 2, msg2);
  //Serial.print("Temp. objeto => ");
  Serial.println(temperaturaObjeto);
  //Serial.println("ºC");
  if (temperaturaObjeto > 35 && temperaturaObjeto < 100) {
    client.publish("/casa/puerta/termometro", "4");
  }
  if (temperaturaObjeto > 20 && temperaturaObjeto < 35) {
    client.publish("/casa/puerta/termometro", "5");
  }
*/

  Serial.print("Ambient = "); Serial.print(mlx.readAmbientTempC());
    float temperaturaObjeto = mlx.readObjectTempC(); 
  Serial.print("*C\tObject = "); Serial.print(temperaturaObjeto); Serial.println("*C");
  if (temperaturaObjeto > 35 && temperaturaObjeto < 100) {
    client.publish("/casa/puerta/termometro", "4");
  }
  if (temperaturaObjeto > 20 && temperaturaObjeto < 35) {
    client.publish("/casa/puerta/termometro", "5");
  }
  


  Serial.println();
  delay(500);

  //Interruptor Magnético

 ValPuerta = digitalRead(intPuerta);
 // Serial.println(ValPuerta);
  if (ValPuerta == HIGH) {

    client.publish("/casa/puerta/alarma", "1");
   // delay(100);
    Serial.println("Puerta abierta");
  }
  else {
    client.publish("/casa/puerta/alarma", "0");
    //delay (100);
  }

  //Sensor de lluvia

  value = digitalRead(lluvia);  //lectura digital de pin
  if (value == LOW) {
      //   Serial.println("Detectada lluvia");
    client.publish("/hivernadero/lluvia", "6");
  }
  else {
    //  Serial.println("no lluvia");
    client.publish("/hivernadero/lluvia", "7");
  }

  delay(1000);

  //Ultrasónico
  long t;
  long d;

  digitalWrite(Trigger, HIGH);
  delayMicroseconds(10);          //Enviamos un pulso de 10us
  digitalWrite(Trigger, LOW);

  t = pulseIn(Echo, HIGH); //obtenemos el ancho del pulso
  d = t / 59;           //escalamos el tiempo a una distancia en cm

  //Serial.print("Distancia: ");
  //Serial.print(d);      //Enviamos serialmente el valor de la distancia
  //Serial.print("cm");
  //Serial.println();
  //dtostrf (d, 7, 2, msg0);
  //client.publish("/casa/cocina/alarma", msg0);
  estadoAlarma = digitalRead(AlarmaCocina);
  if (estadoAlarma == HIGH) {
     //Serial.println("Alarma Activada");
    if (d < 10) {
       //   Serial.println("Estufa activada");
      client.publish("/casa/cocina/alarma", "2");
    }
    else {
        // Serial.println("Estufa desactivada");
      client.publish("/casa/cocina/alarma", "3");
    }
  }
  else {
    client.publish("/casa/cocina/alarma", "3");
//    Serial.println("Alarma desactivada");
  }




  //Temperatura
  float value = dht.readTemperature();
  if (isnan(value)) {
    // Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }
  //Serial.println(value);
  //   dtostrf (value, 4, 2, msg1);
  //Serial.print("Publish message: ");
  //Serial.println(msg1);
  if (value > 26) {
    client.publish("/casa/sala/temperatura", "8");
    //Serial.println("Ventilador activado");
  }
  if (value < 26) {
    client.publish("/casa/sala/temperatura", "9");
    //Serial.println("Ventilador desactivado");
  }




  if (!client.connected()) {
    reconnect();
  }

  client.loop();
}
